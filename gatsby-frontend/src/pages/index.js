"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const client_1 = require("@apollo/client");
const graphql_tag_1 = require("graphql-tag");
const styles_1 = require("@material-ui/core/styles");
const Paper_1 = require("@material-ui/core/Paper");
const Grid_1 = require("@material-ui/core/Grid");
const CircularProgress_1 = require("@material-ui/core/CircularProgress");
const Container_1 = require("@material-ui/core/Container");
// Material UI
const useStyles = styles_1.makeStyles((theme) => ({
    root: {
        flexGrow: 1,
    },
    paper: {
        padding: theme.spacing(2),
        textAlign: 'center',
        color: theme.palette.text.secondary,
    },
    paper1: {
        padding: theme.spacing(2),
        color: theme.palette.text.secondary,
    },
    grid: {
        justifyContent: "center",
        margin: -20,
        height: "102vh",
        backgroundColor: "lightblue"
    }
}));
// This query is executed at run time by Apollo.
const Get_All_Tasks = graphql_tag_1.default `
{
  listNotes {
    name,
    id,
    completed
  }
}
`;
const ADD_Task = graphql_tag_1.default `
mutation addTask ( $task : String!) {
  addTask (task : $task) {
    task
  }
}
`;
function Home() {
    const classes = useStyles();
    const [addTask] = client_1.useMutation(ADD_Task);
    let input;
    const { loading, error, data } = client_1.useQuery(Get_All_Tasks);
    // console.log(error);
    console.log(data);
    // console.log(addTask)
    if (loading) {
        return (<react_1.default.Fragment>
        <Container_1.default maxWidth="sm">
          <CircularProgress_1.default disableShrink/>
        </Container_1.default>
      </react_1.default.Fragment>);
    }
    if (error) {
        return `Error is ${error.message}`;
    }
    return (<Grid_1.default className={classes.grid} container spacing={3}>
      <Grid_1.default item xs={10}>
        <Paper_1.default style={{
        fontSize: "2em",
        color: "cornflowerblue"
    }} className={classes.paper}>Todo App</Paper_1.default>
      </Grid_1.default>
      <Grid_1.default item xs={8}>
        <Paper_1.default className={classes.paper}>
          
        </Paper_1.default>
      </Grid_1.default>
      <Grid_1.default item xs={6}>
        {data.listNotes.map((task, id) => {
        return <Paper_1.default key={id} className={classes.paper1}>
            <input type="checkbox" name="checked"/>
            {task.name}
          </Paper_1.default>;
    })}
      </Grid_1.default>
    </Grid_1.default>);
}
exports.default = Home;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBdUM7QUFDdkMsMkNBQXVEO0FBQ3ZELDZDQUE4QjtBQUM5QixxREFBc0Q7QUFDdEQsbURBQTRDO0FBQzVDLGlEQUEwQztBQUUxQyx5RUFBa0U7QUFDbEUsMkRBQW9EO0FBQ3BELGNBQWM7QUFDZCxNQUFNLFNBQVMsR0FBRyxtQkFBVSxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZDLElBQUksRUFBRTtRQUNKLFFBQVEsRUFBRSxDQUFDO0tBQ1o7SUFDRCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDekIsU0FBUyxFQUFFLFFBQVE7UUFDbkIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVM7S0FDcEM7SUFDRCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDekIsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVM7S0FDcEM7SUFDRCxJQUFJLEVBQUU7UUFDSixjQUFjLEVBQUUsUUFBUTtRQUN4QixNQUFNLEVBQUUsQ0FBQyxFQUFFO1FBQ1gsTUFBTSxFQUFFLE9BQU87UUFDZixlQUFlLEVBQUUsV0FBVztLQUM3QjtDQUNGLENBQUMsQ0FBQyxDQUFDO0FBRUosZ0RBQWdEO0FBQ2hELE1BQU0sYUFBYSxHQUFHLHFCQUFHLENBQUE7Ozs7Ozs7O0NBUXhCLENBQUM7QUFDRixNQUFNLFFBQVEsR0FBRyxxQkFBRyxDQUFBOzs7Ozs7Q0FNbkIsQ0FBQTtBQUVELFNBQXdCLElBQUk7SUFDMUIsTUFBTSxPQUFPLEdBQUcsU0FBUyxFQUFFLENBQUM7SUFDNUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLG9CQUFXLENBQUMsUUFBUSxDQUFDLENBQUE7SUFDdkMsSUFBSSxLQUFVLENBQUM7SUFDZixNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxpQkFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3pELHNCQUFzQjtJQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ2pCLHVCQUF1QjtJQUN2QixJQUFJLE9BQU8sRUFBRTtRQUNYLE9BQU8sQ0FDTCxDQUFDLGVBQUssQ0FBQyxRQUFRLENBQ2I7UUFBQSxDQUFDLG1CQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDdEI7VUFBQSxDQUFDLDBCQUFnQixDQUFDLGFBQWEsRUFDakM7UUFBQSxFQUFFLG1CQUFTLENBQ2I7TUFBQSxFQUFFLGVBQUssQ0FBQyxRQUFRLENBQUMsQ0FDbEIsQ0FBQztLQUNIO0lBQ0QsSUFBSSxLQUFLLEVBQUU7UUFDVCxPQUFPLFlBQVksS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFBO0tBQ25DO0lBQ0QsT0FBTyxDQUNMLENBQUMsY0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQ2xEO01BQUEsQ0FBQyxjQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUNoQjtRQUFBLENBQUMsZUFBSyxDQUNKLEtBQUssQ0FBQyxDQUFDO1FBQ0wsUUFBUSxFQUFFLEtBQUs7UUFDZixLQUFLLEVBQUUsZ0JBQWdCO0tBQ3hCLENBQUMsQ0FDRixTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxFQUFFLGVBQUssQ0FDN0M7TUFBQSxFQUFFLGNBQUksQ0FDTjtNQUFBLENBQUMsY0FBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDZjtRQUFBLENBQUMsZUFBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FDOUI7VUF3QkY7UUFBQSxFQUFFLGVBQUssQ0FDVDtNQUFBLEVBQUUsY0FBSSxDQUNOO01BQUEsQ0FBQyxjQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUNmO1FBQUEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQW9ELEVBQUUsRUFBc0MsRUFBRSxFQUFFO1FBQ25ILE9BQU8sQ0FBQyxlQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUMvQztZQUFBLENBQUMsS0FBSyxDQUNKLElBQUksQ0FBQyxVQUFVLENBQ2YsSUFBSSxDQUFDLFNBQVMsRUFFaEI7WUFBQSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ1o7VUFBQSxFQUFFLGVBQUssQ0FBQyxDQUFBO0lBQ1YsQ0FBQyxDQUFDLENBQ0o7TUFBQSxFQUFFLGNBQUksQ0FDUjtJQUFBLEVBQUUsY0FBSSxDQUFDLENBQ1IsQ0FBQztBQUVKLENBQUM7QUF4RUQsdUJBd0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcclxuaW1wb3J0IHsgdXNlTXV0YXRpb24sIHVzZVF1ZXJ5IH0gZnJvbSAnQGFwb2xsby9jbGllbnQnO1xyXG5pbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJztcclxuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL3N0eWxlcyc7XHJcbmltcG9ydCBQYXBlciBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9QYXBlcic7XHJcbmltcG9ydCBHcmlkIGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL0dyaWQnO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQG1hdGVyaWFsLXVpL2NvcmVcIjtcclxuaW1wb3J0IENpcmN1bGFyUHJvZ3Jlc3MgZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvQ2lyY3VsYXJQcm9ncmVzcyc7XHJcbmltcG9ydCBDb250YWluZXIgZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvQ29udGFpbmVyJztcclxuLy8gTWF0ZXJpYWwgVUlcclxuY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcygodGhlbWUpID0+ICh7XHJcbiAgcm9vdDoge1xyXG4gICAgZmxleEdyb3c6IDEsXHJcbiAgfSxcclxuICBwYXBlcjoge1xyXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZygyKSxcclxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LnNlY29uZGFyeSxcclxuICB9LFxyXG4gIHBhcGVyMToge1xyXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZygyKSxcclxuICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQuc2Vjb25kYXJ5LFxyXG4gIH0sXHJcbiAgZ3JpZDoge1xyXG4gICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXHJcbiAgICBtYXJnaW46IC0yMCxcclxuICAgIGhlaWdodDogXCIxMDJ2aFwiLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiBcImxpZ2h0Ymx1ZVwiXHJcbiAgfVxyXG59KSk7XHJcblxyXG4vLyBUaGlzIHF1ZXJ5IGlzIGV4ZWN1dGVkIGF0IHJ1biB0aW1lIGJ5IEFwb2xsby5cclxuY29uc3QgR2V0X0FsbF9UYXNrcyA9IGdxbGBcclxue1xyXG4gIGxpc3ROb3RlcyB7XHJcbiAgICBuYW1lLFxyXG4gICAgaWQsXHJcbiAgICBjb21wbGV0ZWRcclxuICB9XHJcbn1cclxuYDtcclxuY29uc3QgQUREX1Rhc2sgPSBncWxgXHJcbm11dGF0aW9uIGFkZFRhc2sgKCAkdGFzayA6IFN0cmluZyEpIHtcclxuICBhZGRUYXNrICh0YXNrIDogJHRhc2spIHtcclxuICAgIHRhc2tcclxuICB9XHJcbn1cclxuYFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSG9tZSgpIHtcclxuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKCk7XHJcbiAgY29uc3QgW2FkZFRhc2tdID0gdXNlTXV0YXRpb24oQUREX1Rhc2spXHJcbiAgbGV0IGlucHV0OiBhbnk7XHJcbiAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSB9ID0gdXNlUXVlcnkoR2V0X0FsbF9UYXNrcyk7XHJcbiAgLy8gY29uc29sZS5sb2coZXJyb3IpO1xyXG4gIGNvbnNvbGUubG9nKGRhdGEpXHJcbiAgLy8gY29uc29sZS5sb2coYWRkVGFzaylcclxuICBpZiAobG9hZGluZykge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICAgIDxDb250YWluZXIgbWF4V2lkdGg9XCJzbVwiPlxyXG4gICAgICAgICAgPENpcmN1bGFyUHJvZ3Jlc3MgZGlzYWJsZVNocmluayAvPlxyXG4gICAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8L1JlYWN0LkZyYWdtZW50PlxyXG4gICAgKTtcclxuICB9XHJcbiAgaWYgKGVycm9yKSB7XHJcbiAgICByZXR1cm4gYEVycm9yIGlzICR7ZXJyb3IubWVzc2FnZX1gXHJcbiAgfVxyXG4gIHJldHVybiAoXHJcbiAgICA8R3JpZCBjbGFzc05hbWU9e2NsYXNzZXMuZ3JpZH0gY29udGFpbmVyIHNwYWNpbmc9ezN9PlxyXG4gICAgICA8R3JpZCBpdGVtIHhzPXsxMH0+XHJcbiAgICAgICAgPFBhcGVyXHJcbiAgICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgICBmb250U2l6ZTogXCIyZW1cIixcclxuICAgICAgICAgICAgY29sb3I6IFwiY29ybmZsb3dlcmJsdWVcIlxyXG4gICAgICAgICAgfX1cclxuICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5wYXBlcn0+VG9kbyBBcHA8L1BhcGVyPlxyXG4gICAgICA8L0dyaWQ+XHJcbiAgICAgIDxHcmlkIGl0ZW0geHM9ezh9PlxyXG4gICAgICAgIDxQYXBlciBjbGFzc05hbWU9e2NsYXNzZXMucGFwZXJ9PlxyXG4gICAgICAgICAgey8qIDxmb3JtXHJcbiAgICAgICAgICAgIG9uU3VibWl0PXtlID0+IHtcclxuICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgYWRkVGFzayh7IHZhcmlhYmxlczogeyB0YXNrOiBpbnB1dC52YWx1ZSB9LCByZWZldGNoUXVlcmllczogW3sgcXVlcnk6IEdldF9BbGxfVGFza3MgfV0gfSk7XHJcbiAgICAgICAgICAgICAgaW5wdXQudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgfX1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJXcml0ZSB5b3VyIHRhc2sgaGVyZVwiXHJcbiAgICAgICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzAsXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IFwic29saWRcIixcclxuICAgICAgICAgICAgICAgIG1hcmdpbkJvdHRvbTogMjBcclxuICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgIHJlZj17bm9kZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dCA9IG5vZGU7XHJcbiAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cInN1Ym1pdFwiIHZhcmlhbnQ9XCJjb250YWluZWRcIiBjb2xvcj1cInByaW1hcnlcIiBkaXNhYmxlRWxldmF0aW9uPlxyXG4gICAgICAgICAgICAgIEFkZCBUYXNrXHJcbiAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgPC9mb3JtPiAqL31cclxuICAgICAgICA8L1BhcGVyPlxyXG4gICAgICA8L0dyaWQ+XHJcbiAgICAgIDxHcmlkIGl0ZW0geHM9ezZ9PlxyXG4gICAgICAgIHtkYXRhLmxpc3ROb3Rlcy5tYXAoKHRhc2s6IHsgY29tcGxldGVkOiBib29sZWFuOyBuYW1lOiBSZWFjdC5SZWFjdE5vZGU7IH0sIGlkOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsIHwgdW5kZWZpbmVkKSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gPFBhcGVyIGtleT17aWR9IGNsYXNzTmFtZT17Y2xhc3Nlcy5wYXBlcjF9PlxyXG4gICAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxyXG4gICAgICAgICAgICAgIG5hbWU9XCJjaGVja2VkXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAge3Rhc2submFtZX1cclxuICAgICAgICAgIDwvUGFwZXI+XHJcbiAgICAgICAgfSl9XHJcbiAgICAgIDwvR3JpZD5cclxuICAgIDwvR3JpZD5cclxuICApO1xyXG5cclxufVxyXG4iXX0=